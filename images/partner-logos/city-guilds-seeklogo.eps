%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 9305.972 6391.304 9865.134 6745.493
%%Creator: Adobe Illustrator(TM) 7.0 exported from EASYSIGN32
%%Title: C:\Documents and Settings\Administrator\Desktop\City & Guilds.eps
%%CreationDate: Friday, October 16, 2009,  17:47:06
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: Adobe_ColorImage_AI6 1.2 0
%%+ Adobe_Illustrator_AI5 1.2 0
%%+ Adobe_level2_AI5 1.2 0
%%DocumentFonts:
%%EndComments
%%BeginProlog
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
Adobe_level2_AI5 /initialize get exec
10.433 M
1 XR
%%EndSetup
0.000 0.000 0.000 0.000 k 
*u
9305.97 6745.49 m
9865.13 6745.49 L
9865.13 6391.30 L
9305.97 6391.30 L
9305.97 6745.49 L
f
*U
0.000 1.000 1.000 0.000 k 
*u
9739.30 6646.05 m
9739.22 6645.12 9735.62 6646.05 9733.61 6645.43 C
9736.67 6641.80 9739.36 6638.40 9741.74 6634.57 C
9738.23 6634.97 9733.35 6638.14 9728.16 6637.46 C
9727.54 6637.27 9728.67 6633.50 9729.35 6630.69 C
9730.37 6626.72 9725.84 6631.94 9724.14 6632.99 C
9717.39 6637.41 9703.56 6639.70 9704.44 6652.09 C
9700.78 6654.36 9696.98 6656.60 9693.07 6658.75 C
9682.67 6653.37 9672.72 6645.91 9671.67 6634.03 C
9670.22 6619.61 9683.52 6604.78 9703.16 6608.72 C
9709.82 6610.00 9715.29 6614.19 9721.25 6617.28 C
9727.34 6620.54 9734.43 6622.95 9741.26 6623.63 C
9747.13 6624.28 9762.29 6622.75 9762.15 6628.71 C
9762.09 6634.91 9753.85 6630.69 9749.40 6630.69 C
9752.49 6632.45 9753.48 6636.42 9754.87 6640.04 C
9751.95 6640.95 9749.91 6640.30 9747.41 6639.70 C
9749.20 6643.87 9751.15 6648.41 9753.45 6652.09 C
9751.01 6652.43 9747.86 6651.92 9745.17 6650.99 C
9747.52 6655.86 9750.05 6660.99 9753.45 6664.76 C
9751.04 6664.76 9748.57 6664.76 9746.08 6664.76 C
9750.44 6669.04 9752.43 6676.21 9760.59 6676.81 C
9759.80 6680.07 9754.33 6677.83 9751.49 6680.78 C
9756.96 6682.76 9761.10 6686.33 9768.84 6686.11 C
9768.36 6687.18 9765.13 6691.21 9763.54 6693.45 C
9767.57 6693.05 9777.32 6692.51 9781.74 6690.13 C
9785.37 6693.82 9791.89 6695.01 9799.14 6693.45 C
9797.56 6691.61 9794.72 6691.12 9793.76 6688.83 C
9800.22 6683.47 9809.94 6681.32 9817.94 6677.43 C
9817.94 6671.14 9813.71 6668.11 9809.89 6664.05 C
9808.38 6667.65 9803.06 6666.94 9799.09 6667.91 C
9798.15 6667.51 9798.09 6666.09 9797.98 6664.90 C
9805.07 6664.68 9810.57 6661.19 9816.55 6662.72 C
9822.10 6664.22 9821.88 6672.02 9827.97 6672.16 C
9824.51 6669.33 9826.24 6661.33 9821.96 6659.43 C
9811.96 6657.96 9806.26 6663.32 9798.69 6662.04 C
9799.29 6657.99 9805.07 6657.31 9808.19 6659.60 C
9808.53 6657.31 9811.36 6658.55 9811.81 6656.77 C
9812.66 6653.48 9808.33 6649.99 9806.46 6648.41 C
9806.20 6653.17 9798.60 6654.42 9796.37 6652.09 C
9790.70 6646.17 9808.13 6643.81 9812.52 6637.35 C
9811.16 6637.35 9809.12 6637.12 9807.70 6637.12 C
9807.73 6634.23 9811.96 6635.17 9813.91 6635.37 C
9817.82 6635.93 9822.27 6641.18 9823.29 6646.05 C
9824.14 6650.14 9820.63 6656.00 9826.84 6657.39 C
9830.72 6657.65 9831.00 6660.43 9834.01 6661.45 C
9837.13 6663.12 9832.56 6659.40 9833.64 6657.19 C
9833.95 6657.19 9834.15 6657.25 9834.41 6657.25 C
9836.45 6657.25 9838.52 6656.17 9839.62 6654.42 C
9841.07 6655.27 9843.96 6653.74 9844.36 6651.13 C
9842.46 6651.64 9841.07 6651.98 9840.36 6650.84 C
9839.28 6648.75 9839.42 6646.90 9840.36 6645.83 C
9840.95 6645.23 9841.61 6642.03 9841.61 6639.85 C
9837.13 6644.52 9832.56 6634.43 9828.82 6631.99 C
9829.62 6630.35 9831.71 6629.95 9833.56 6629.41 C
9832.31 6627.12 9828.82 6627.37 9826.30 6626.47 C
9826.44 6624.48 9831.40 6623.63 9828.94 6623.18 C
9826.04 6622.75 9822.87 6621.11 9820.18 6622.36 C
9818.14 6621.85 9822.87 6619.32 9820.91 6619.01 C
9814.65 6617.71 9803.42 6621.65 9803.76 6617.68 C
9804.50 6611.61 9811.36 6615.24 9815.16 6616.03 C
9824.40 6617.91 9839.71 6622.19 9843.39 6607.79 C
9837.47 6613.06 9839.96 6602.66 9836.59 6600.02 C
9834.83 6598.83 9836.59 6603.14 9835.46 6603.59 C
9830.61 6605.23 9830.86 6599.62 9827.83 6598.52 C
9825.25 6613.00 9813.12 6598.71 9807.00 6596.08 C
9806.68 6597.72 9806.66 6597.78 9806.49 6599.96 C
9803.45 6598.97 9801.64 6596.08 9799.23 6594.49 C
9797.98 6595.74 9798.35 6598.18 9797.78 6599.96 C
9794.52 6598.12 9791.77 6595.74 9788.40 6594.04 C
9787.75 6595.40 9788.20 6597.18 9787.01 6599.31 C
9782.42 6602.71 9772.33 6600.67 9764.82 6601.10 C
9765.13 6597.04 9773.43 6598.83 9777.26 6597.67 C
9781.54 6596.19 9787.07 6591.26 9785.25 6583.89 C
9782.82 6574.65 9757.47 6574.20 9770.74 6565.66 C
9773.69 6565.55 9778.31 6569.63 9786.56 6567.65 C
9789.08 6567.08 9786.05 6565.95 9785.45 6564.87 C
9786.84 6562.03 9790.84 6561.98 9792.48 6559.29 C
9791.12 6558.49 9787.21 6559.63 9787.49 6556.00 C
9778.34 6556.59 9759.00 6556.05 9758.81 6556.31 C
9757.76 6558.24 9756.51 6560.82 9755.43 6563.42 C
9753.45 6563.76 9748.91 6562.06 9747.33 6562.66 C
9744.77 6563.42 9751.69 6568.53 9752.14 6570.62 C
9751.55 6572.27 9748.77 6571.87 9746.82 6572.07 C
9749.20 6576.55 9758.47 6578.82 9757.56 6581.91 C
9756.51 6586.38 9750.64 6586.53 9746.53 6588.09 C
9748.57 6577.43 9730.86 6577.94 9726.89 6569.77 C
9726.72 6571.76 9726.04 6573.37 9725.24 6574.59 C
9723.09 6573.00 9720.06 6571.53 9718.92 6568.89 C
9717.82 6569.69 9719.06 6572.66 9716.54 6572.66 C
9711.35 6572.61 9705.94 6567.65 9706.73 6566.29 C
9708.69 6563.42 9713.00 6568.84 9714.98 6568.30 C
9716.54 6567.79 9716.63 6566.54 9718.38 6566.14 C
9720.17 6565.66 9722.01 6566.20 9723.20 6565.29 C
9723.09 6564.50 9721.96 6563.76 9721.11 6563.65 C
9721.90 6560.59 9726.04 6561.86 9727.34 6559.29 C
9725.30 6559.29 9723.66 6557.95 9722.15 6556.00 C
9716.63 6556.25 9693.41 6555.60 9692.42 6556.37 C
9690.77 6557.50 9690.07 6558.58 9689.73 6559.99 C
9688.34 6564.81 9693.47 6565.46 9695.25 6568.92 C
9694.15 6570.48 9690.89 6570.62 9688.68 6571.08 C
9690.97 6574.65 9697.55 6574.85 9701.12 6577.34 C
9699.82 6578.59 9698.37 6579.47 9695.74 6579.33 C
9699.02 6585.51 9706.59 6583.49 9711.61 6586.98 C
9717.39 6591.00 9716.68 6598.06 9719.86 6605.29 C
9706.28 6601.29 9695.20 6594.04 9678.93 6594.04 C
9660.70 6594.04 9648.11 6604.44 9646.02 6619.35 C
9642.73 6644.18 9661.32 6658.04 9679.55 6666.09 C
9670.93 6675.45 9661.92 6683.10 9663.53 6698.13 C
9666.99 6731.46 9734.29 6733.39 9734.03 6696.85 C
9733.95 6679.33 9717.73 6672.53 9705.34 6665.47 C
9707.39 6663.77 9710.93 6661.19 9711.86 6660.79 C
9712.91 6660.28 9715.69 6661.28 9717.99 6660.94 C
9728.22 6659.74 9732.10 6651.33 9739.30 6646.05 C
f
9713.25 6696.09 m
9714.90 6708.98 9705.54 6714.74 9695.00 6712.81 C
9677.20 6709.46 9682.53 6682.08 9694.40 6674.85 C
9702.45 6678.60 9711.92 6685.94 9713.25 6696.09 C
f
9801.72 6681.17 m
9797.50 6681.17 9793.13 6681.29 9792.43 6677.80 C
9795.32 6677.83 9796.25 6676.02 9799.63 6676.50 C
9798.15 6679.13 9800.19 6679.87 9801.72 6681.17 C
f
9814.51 6674.26 m
9812.81 6674.60 9812.27 6677.83 9810.54 6676.30 C
9810.17 6674.17 9813.40 6672.53 9814.51 6674.26 C
f
*U
u
0.000 0.000 0.000 1.000 k 
*u
9445.49 6697.93 m
9431.52 6684.92 L
9430.24 6686.50 L
9426.42 6690.98 9422.33 6695.49 9417.15 6698.32 C
9412.64 6700.68 9407.45 6701.36 9402.49 6701.36 C
9393.53 6701.53 9384.29 6697.64 9379.11 6689.99 C
9372.39 6680.04 9371.00 6667.54 9370.97 6655.80 C
9371.00 6644.24 9372.36 6632.05 9378.82 6622.24 C
9383.58 6614.99 9392.29 6611.10 9400.96 6611.24 C
9405.98 6611.22 9411.00 6612.24 9415.56 6614.59 C
9421.03 6617.48 9425.65 6621.79 9429.93 6626.27 C
9431.43 6627.83 L
9444.27 6614.05 L
9443.17 6612.60 L
9437.84 6605.94 9431.43 6600.02 9423.67 6596.33 C
9415.96 6592.59 9407.37 6591.32 9398.81 6591.32 C
9384.63 6591.06 9369.72 6596.53 9361.02 6608.21 C
9350.73 6621.85 9348.18 6639.51 9348.12 6656.12 C
9348.18 6672.81 9351.35 6690.53 9362.15 6703.65 C
9371.85 6715.53 9387.52 6721.00 9402.49 6720.75 C
9410.54 6720.75 9418.79 6719.67 9426.02 6716.04 C
9433.53 6712.16 9439.48 6705.98 9444.47 6699.32 C
9445.49 6697.93 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9480.67 6701.73 m
9458.93 6701.73 L
9458.93 6723.55 L
9480.67 6723.55 L
9480.67 6701.73 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9554.91 6602.12 m
9548.05 6596.05 9539.15 6592.00 9529.94 6592.37 C
9523.39 6592.37 9516.42 6593.84 9511.80 6598.63 C
9506.92 6603.51 9505.67 6610.65 9505.67 6617.23 C
9505.67 6673.32 L
9493.54 6673.32 L
9493.54 6690.59 L
9505.87 6690.59 L
9506.83 6714.45 L
9526.96 6718.56 L
9526.68 6690.59 L
9551.88 6690.59 L
9551.88 6673.32 L
9526.62 6673.32 L
9526.62 6623.83 L
9526.62 6621.00 9526.68 6618.10 9527.30 6615.47 C
9528.07 6612.43 9531.04 6610.37 9534.22 6610.42 C
9539.21 6610.42 9543.32 6613.74 9547.34 6616.32 C
9549.18 6617.68 L
9556.04 6603.05 L
9554.91 6602.12 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9645.34 6690.59 m
9613.59 6608.13 L
9612.85 6605.94 9611.94 6603.73 9611.12 6601.66 C
9610.02 6598.91 9608.91 6596.14 9607.83 6593.44 C
9605.28 6587.04 9602.76 6580.86 9599.98 6574.59 C
9591.62 6556.00 L
9568.89 6556.00 L
9569.93 6558.24 L
9570.39 6559.14 9570.93 6560.08 9571.44 6561.01 C
9573.45 6565.07 9575.46 6569.09 9577.33 6573.20 C
9579.49 6577.99 9581.73 6582.81 9584.05 6587.57 C
9585.69 6591.26 9587.34 6594.94 9588.78 6598.77 C
9588.84 6598.89 L
9554.26 6690.59 L
9577.19 6690.59 L
9596.95 6633.78 L
9597.09 6633.10 9597.34 6632.45 9597.63 6631.74 C
9597.97 6630.69 9598.34 6629.50 9598.68 6628.42 C
9599.07 6627.23 9599.36 6626.13 9599.78 6624.99 C
9599.81 6625.22 L
9600.72 6628.11 9601.57 6631.00 9602.82 6633.78 C
9623.25 6690.59 L
9645.34 6690.59 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9550.03 6415.65 m
9529.11 6415.65 L
9528.92 6417.47 L
9528.66 6421.32 9528.55 6425.21 9528.46 6429.09 C
9528.46 6429.60 L
9520.70 6420.13 9509.75 6412.93 9497.17 6413.39 C
9489.57 6413.27 9481.66 6415.65 9476.45 6421.38 C
9470.81 6427.36 9468.96 6435.75 9469.02 6443.72 C
9469.02 6512.23 L
9490.11 6512.23 L
9490.11 6447.80 L
9490.17 6443.77 9490.56 6439.44 9493.06 6436.01 C
9494.84 6433.43 9498.02 6432.32 9501.05 6432.43 C
9502.70 6432.43 9504.40 6432.63 9505.93 6433.17 C
9515.76 6436.89 9521.80 6446.35 9527.50 6454.71 C
9527.50 6512.23 L
9548.76 6512.23 L
9548.59 6435.67 L
9548.65 6429.63 9549.04 6423.76 9549.78 6417.89 C
9550.03 6415.65 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9588.84 6523.34 m
9566.90 6523.34 L
9566.90 6544.26 L
9588.84 6544.26 L
9588.84 6523.34 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9628.41 6415.65 m
9607.63 6415.65 L
9607.63 6544.26 L
9628.41 6544.26 L
9628.41 6415.65 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9735.48 6415.65 m
9714.19 6415.65 L
9713.85 6417.41 L
9713.31 6421.63 9712.94 6425.86 9712.80 6430.08 C
9709.29 6425.80 9705.34 6421.89 9700.38 6419.00 C
9694.46 6415.46 9687.43 6414.01 9680.57 6414.07 C
9670.85 6413.92 9660.98 6417.55 9654.72 6424.72 C
9647.35 6432.97 9644.49 6444.00 9643.44 6454.60 C
9643.18 6457.55 9643.12 6460.53 9643.12 6463.50 C
9643.12 6476.57 9645.48 6490.46 9654.18 6501.09 C
9661.44 6510.30 9673.77 6515.04 9685.76 6514.87 C
9691.82 6514.87 9698.17 6513.85 9703.64 6511.21 C
9706.79 6509.65 9709.63 6507.55 9712.06 6505.17 C
9711.95 6506.87 9711.92 6508.57 9711.92 6510.30 C
9711.92 6544.26 L
9734.03 6544.26 L
9734.03 6435.01 L
9734.03 6434.22 9734.09 6433.37 9734.09 6432.63 C
9734.14 6431.33 9734.23 6429.94 9734.29 6428.61 C
9734.43 6425.21 9734.74 6421.83 9735.28 6418.40 C
9735.48 6415.65 L
f
9689.73 6433.31 m
9700.38 6437.25 9706.93 6446.95 9712.20 6456.05 C
9712.54 6458.49 9712.71 6460.98 9712.66 6463.50 C
9712.66 6468.89 9712.26 6474.36 9710.67 6479.57 C
9708.12 6488.96 9699.34 6497.32 9688.68 6497.32 C
9682.27 6497.46 9675.75 6494.29 9672.38 6489.01 C
9667.45 6481.64 9666.45 6472.54 9666.37 6463.96 C
9666.51 6455.74 9666.79 6447.15 9670.99 6439.78 C
9673.43 6435.16 9678.70 6432.24 9684.11 6432.43 C
9686.04 6432.43 9687.86 6432.72 9689.73 6433.31 C
f
*U
0.000 0.000 0.000 1.000 k 
*u
9821.62 6505.97 m
9814.79 6488.28 L
9812.78 6489.41 L
9805.95 6493.78 9797.95 6497.18 9789.68 6496.92 C
9785.45 6496.87 9781.09 6496.19 9777.60 6493.58 C
9774.91 6491.45 9773.63 6487.91 9773.69 6484.65 C
9773.57 6481.90 9774.82 6478.92 9777.40 6477.62 C
9778.90 6476.83 9780.58 6476.23 9782.39 6476.14 C
9782.59 6476.14 L
9782.67 6476.09 L
9785.06 6475.55 9787.49 6475.38 9789.93 6475.15 C
9798.24 6474.05 9807.00 6472.06 9813.40 6466.34 C
9818.99 6461.38 9821.11 6453.55 9821.03 6446.21 C
9821.17 6437.31 9817.88 6427.98 9810.94 6422.09 C
9803.45 6415.63 9793.36 6413.47 9783.67 6413.47 C
9771.93 6413.27 9760.25 6416.62 9750.25 6422.83 C
9748.77 6423.76 L
9756.37 6440.83 L
9758.27 6439.52 L
9765.72 6434.76 9774.17 6430.88 9783.13 6430.99 C
9787.41 6430.99 9792.03 6431.87 9795.46 6434.62 C
9798.24 6436.74 9799.74 6440.29 9799.68 6443.80 C
9799.74 6446.81 9799.03 6449.98 9796.76 6452.02 C
9793.67 6454.54 9789.59 6455.31 9785.76 6455.79 C
9781.88 6456.25 9778.05 6456.70 9774.17 6457.29 C
9770.40 6457.95 9766.80 6459.48 9763.68 6461.40 C
9756.09 6465.86 9752.63 6474.90 9752.80 6483.34 C
9752.63 6492.05 9756.03 6501.00 9762.69 6506.62 C
9769.95 6512.83 9779.78 6515.12 9789.19 6515.12 C
9799.99 6515.18 9810.94 6512.43 9820.12 6506.82 C
9821.62 6505.97 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9480.08 6593.95 m
9459.47 6593.95 L
9459.47 6690.59 L
9480.08 6690.59 L
9480.08 6593.95 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9588.13 6415.65 m
9567.55 6415.65 L
9567.55 6512.23 L
9588.13 6512.23 L
9588.13 6415.65 L
f
*U
0.000 0.000 0.000 1.000 k 
*u
9449.74 6520.25 m
9435.40 6507.07 L
9434.07 6508.52 L
9429.70 6513.22 9425.17 6517.90 9419.44 6520.71 C
9414.48 6523.17 9408.90 6523.74 9403.43 6523.74 C
9393.68 6523.88 9383.39 6520.39 9377.26 6512.34 C
9369.98 6502.90 9368.33 6490.40 9368.22 6478.67 C
9368.33 6466.48 9369.78 6453.35 9377.26 6443.32 C
9383.33 6435.10 9393.87 6431.67 9403.82 6431.87 C
9407.71 6431.87 9411.65 6431.98 9415.42 6432.97 C
9419.10 6433.91 9422.59 6435.69 9425.91 6437.51 C
9425.91 6474.98 L
9447.90 6474.98 L
9447.90 6425.97 L
9446.85 6425.35 L
9433.02 6417.89 9417.66 6412.99 9401.84 6413.39 C
9386.16 6413.13 9369.55 6418.20 9359.06 6430.39 C
9347.58 6443.40 9344.15 6461.38 9344.15 6478.33 C
9344.10 6495.22 9348.04 6513.08 9359.57 6525.92 C
9370.26 6537.94 9386.82 6543.21 9402.63 6543.13 C
9411.48 6543.13 9420.58 6541.88 9428.66 6538.05 C
9436.59 6534.48 9443.17 6528.50 9448.58 6521.73 C
9449.74 6520.25 L
f
*U
U
%%Trailer
Adobe_ColorImage_AI6 /terminate get exec
Adobe_Illustrator_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
end
%%EOF
